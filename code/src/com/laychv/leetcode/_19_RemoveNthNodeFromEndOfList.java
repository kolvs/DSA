package com.laychv.leetcode;

import com.laychv.common.ListNode;

import static com.laychv.common.PrintListNode.listNodeToString;
import static com.laychv.common.PrintListNode.stringToListNode;

/**
 * 19. åˆ é™¤é“¾è¡¨çš„å€’æ•°ç¬¬Nä¸ªèŠ‚ç‚¹ ðŸŸ¡
 * <p>
 * ç»™å®šä¸€ä¸ªé“¾è¡¨ï¼Œåˆ é™¤é“¾è¡¨çš„å€’æ•°ç¬¬ n ä¸ªèŠ‚ç‚¹ï¼Œå¹¶ä¸”è¿”å›žé“¾è¡¨çš„å¤´ç»“ç‚¹ã€‚
 * <p>
 * è¾“å…¥ï¼šhead = [1,2,3,4,5], n = 2
 * è¾“å‡ºï¼š[1,2,3,5]
 * <p>
 * è¾“å…¥ï¼šhead = [1], n = 1
 * è¾“å‡ºï¼š[]
 * <p>
 * è¾“å…¥ï¼šhead = [1,2], n = 1
 * è¾“å‡ºï¼š[1]
 * <p>
 * https://leetcode.cn/problems/remove-nth-node-from-end-of-list/
 */
class _19_RemoveNthNodeFromEndOfList {

    public static void main(String[] args) {
        String x = "[1,2,3,4,5]";
        int n = 2;
        System.out.print(listNodeToString(removeNthFromEnd(stringToListNode(x), n)));
    }

    static public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode first = dummy;
        ListNode second = dummy;
        for (int i = 1; i <= n + 1; i++) {
            first = first.next;
        }
        while (first != null) {
            first = first.next;
            second = second.next;
        }
        second.next = second.next.next;
        return dummy.next;
    }
}